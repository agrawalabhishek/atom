language: cpp

compiler:
  - gcc
  - clang

env:
  global:
    - secure: "I+Ga7J2Rs3tZzikZcQZPT/yOZ2sKgw3Rfqg2/hIUKnARUWY5ZVD1VCfrqEud1JaHzKOzNy3mekpckifDDh8aRvzzgZIZYLvYd9S8lAlSlPsFnko1TkGGP4R1LnGIOeyIUGXhAyNQ4VpUEvPytladhdIvnt61v80fafl2bvdc7zI="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  coverity_scan:
    project:
      name: "kartikkumar/atom"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DBUILD_TESTS_WITH_EIGEN=on .."
    build_command: "make"
    branch_pattern: coverity_scan

install:
  - sudo apt-get install libgsl0ldbl
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      sudo pip install cpp-coveralls;
    fi

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DBUILD_TESTS_WITH_EIGEN=on ..;
      make;
      ctest -V;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*";
    fi